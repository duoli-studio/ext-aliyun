<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

/**
 * Migration auto-generated by Sequel Pro Laravel Export
 * @see https://github.com/cviebrock/sequel-pro-laravel-export
 */
class CreateOrderHunterTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('order_hunter', function (Blueprint $table) {
            $table->increments('id')->comment('订单id');
            $table->string('order_no', 45)->comment('普通订单编号');
            $table->unsignedTinyInteger('hunter_level')->default(1)->comment('订单类型↵1:普通订单2:优质订单3:金牌订单');
            $table->unsignedTinyInteger('hunter_type')->default(1)->comment('猎手分类↵1:猎手 2:女猎手');
            $table->string('server_code', 12)->comment('大区代码');
            $table->string('dan', 30)->comment('段位名称');
            $table->decimal('dan_price', 10, 2)->default(0.00)->comment('单局价格');
            $table->unsignedTinyInteger('game_count')->default(1)->comment('局数');
            $table->unsignedTinyInteger('girl_hour')->default(1)->comment('女猎手时长');
            $table->decimal('first_price', 10, 2)->default(0.00)->comment('第一局价格/1小时价格');
            $table->decimal('second_price', 10, 2)->default(0.00)->comment('第二局价格/2小时价格');
            $table->decimal('third_price', 10, 2)->default(0.00)->comment('第三局价格/3小时价格');
            $table->decimal('coupon_price', 10, 2)->default(0.00)->comment('优惠价格');
            $table->decimal('calc_price', 10, 2)->default(0.00)->comment('小计价格');
            $table->decimal('total_price', 10, 2)->default(0.00)->comment('支付价格');
            $table->string('pay_method', 10)->comment('支付方式↵猎象余额,微信,支付宝');
            $table->dateTime('pay_over_at')->nullable()->comment('支付完成时间');
            $table->unsignedTinyInteger('is_pay')->comment('支付状态↵0:未支付,1:支付完成');
            $table->string('pay_no', 50)->comment('支付流水号');
            $table->string('status', 45)->comment('订单总状态↵无状态(none), 待接单(publish), 进行,已完成,已取消');
            $table->unsignedTinyInteger('is_ready')->comment('老板是否准备↵0:未准备1:已准备');
            $table->unsignedTinyInteger('first_result')->comment('第一局胜负结果↵0:负1:胜');
            $table->unsignedTinyInteger('second_result')->comment('第二局胜负结果↵0:负1:胜');
            $table->unsignedTinyInteger('third_result')->comment('第三局胜负结果↵0:负1:胜');
            $table->unsignedInteger('account_id')->comment('老板id');
            $table->unsignedInteger('hunter_account_id')->comment('猎手id');
            $table->unsignedTinyInteger('is_boss_star')->comment('老板是否评价↵0未评价1已评价');
            $table->unsignedTinyInteger('is_hunter_star')->comment('猎手是否评价↵0未评价1已评价');
            $table->string('refund_status', 45)->comment('退款状态↵退款中,退款完成,退款失败');
            $table->string('refund_failed_reason', 255)->comment('退款失败原因');
            $table->unsignedInteger('refund_editor_id')->comment('退款操作人');
            $table->dateTime('refund_over_at')->nullable()->comment('退款完成时间');
            $table->dateTime('over_at')->nullable()->comment('订单完成时间');

            $table->unique('order_no', 'order_no_UNIQUE');
            $table->unique('pay_no', 'pay_no_UNIQUE');

            

        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('order_hunter');
    }
}
